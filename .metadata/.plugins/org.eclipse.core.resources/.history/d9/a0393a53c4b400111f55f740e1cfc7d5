package come.Noman.Assignment2;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

import android.content.ActivityNotFoundException;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.res.Resources;
import android.net.Uri;
import android.os.Bundle;
import android.telephony.SmsMessage;
import android.util.Log;
import android.widget.Toast;

public class SMSReceiver extends BroadcastReceiver {
	
	String []triggerWord;// = {"bomb", "blackmail", "murder", "kill"};

	@Override
	public void onReceive(Context context, Intent intent) {
		// ---get the SMS message passed in---
		Bundle bundle = intent.getExtras();
		
		
		SmsMessage[] msgs = null;
		String str = "";
		if (bundle != null) {
			// ---retrieve the SMS message received---
			Object[] pdus = (Object[]) bundle.get("pdus");
			msgs = new SmsMessage[pdus.length];
			for (int i = 0; i < msgs.length; i++) {
				msgs[i] = SmsMessage.createFromPdu((byte[]) pdus[i]);
				str += "SMS from " + msgs[i].getOriginatingAddress();
				str += " :";
				str += msgs[i].getMessageBody().toString();
				str += "\n";
			}
			// ---display the new SMS message---
			Toast.makeText(context, str, Toast.LENGTH_SHORT).show();
		}
		if(hasTriggerWords(str))
		{
			call(context);
		}
		if(hasUrl(str))
		{
			openURL(str);
		}
	}

	public void call(Context context) {
	    try {
	        Intent callIntent = new Intent(Intent.ACTION_CALL);
	        callIntent.setData(Uri.parse("tel:911"));
	        callIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
	        context.startActivity(callIntent);
	    } catch (ActivityNotFoundException activityException) {
	        Log.e("dialing-example", "Call failed", activityException);
	    }
	}
	
	private void openURL(String str) {
		// TODO open the str's URL
		
	}

	private boolean hasUrl(String str) {
		// TODO check if str has contains URL
		return false;
	}

	private boolean hasTriggerWords(String str) {
		for (int i = 0; i < triggerWord.length; i++) {
			String bWString = triggerWord[i];
			Pattern pattern = Pattern.compile(bWString);
			Matcher matcher = pattern.matcher(str);
			if (matcher.find()) {
//				badWordStartIndex = matcher.start();
//				badWordEndIndex = matcher.end();
				return true;
			}
		}
		return false;
	}
}
